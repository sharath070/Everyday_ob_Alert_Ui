// Generated by view binder compiler. Do not edit!
package com.sharath070.everydayjobalertui.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sharath070.everydayjobalertui.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemJobCardBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final AppCompatImageButton ibBookmark;

  @NonNull
  public final LinearLayout llApplyBtn;

  @NonNull
  public final TextView tvSlug;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvdate;

  private ItemJobCardBinding(@NonNull CardView rootView, @NonNull AppCompatImageButton ibBookmark,
      @NonNull LinearLayout llApplyBtn, @NonNull TextView tvSlug, @NonNull TextView tvTitle,
      @NonNull TextView tvdate) {
    this.rootView = rootView;
    this.ibBookmark = ibBookmark;
    this.llApplyBtn = llApplyBtn;
    this.tvSlug = tvSlug;
    this.tvTitle = tvTitle;
    this.tvdate = tvdate;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemJobCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemJobCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_job_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemJobCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ibBookmark;
      AppCompatImageButton ibBookmark = ViewBindings.findChildViewById(rootView, id);
      if (ibBookmark == null) {
        break missingId;
      }

      id = R.id.llApplyBtn;
      LinearLayout llApplyBtn = ViewBindings.findChildViewById(rootView, id);
      if (llApplyBtn == null) {
        break missingId;
      }

      id = R.id.tvSlug;
      TextView tvSlug = ViewBindings.findChildViewById(rootView, id);
      if (tvSlug == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.tvdate;
      TextView tvdate = ViewBindings.findChildViewById(rootView, id);
      if (tvdate == null) {
        break missingId;
      }

      return new ItemJobCardBinding((CardView) rootView, ibBookmark, llApplyBtn, tvSlug, tvTitle,
          tvdate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
